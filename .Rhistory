getwd()
document()
library(roxygen2)
document()
library(devtools)
document()
setwd("..")
install("thePackage")
library(thePackage)
test_function()
?test_function
tweet_gettr <- function(handle, output) {
# Make sure that this is an @
if (substr(handle,1,1) != '@') {
handle <- paste('@', handle, sep = "")
}
tweets <- twitteR::userTimeline(handle, n= 3200, includeRts = TRUE, excludeReplies = FALSE)
tweets <- twListToDF(tweets)
tweets <- userScrape(handle)
tweets <- tweets$text
tweets <- str_replace_all(tweets, "'", "")
tweets <- str_replace_all(tweets, "\n", "newline")
fileConn <- file(output)
writeLines(tweets, fileConn, sep = "\n")
close(fileConn)
return(tweets)
}
tweet_gettr("@undertaleright")
install.packages("thePackage")
setwd("..")
install.packages("thePackage")
getwd()
install('thePackage')
library(devtools)
install("thePackage")
?setup
?thePackage::setup
?thePackage::tweet_gettr
?thePackage::tweet_gettr
?thePackage::setup
?file
library(tidytext)
library(stringr)
library(dplyr)
tidy_tweets <- trump.df %>%
unnest_tokens(word, text)
?unnest_tokens
?get_sentiments
install("../package")
library(devtools)
install("../package")
library(thePackage)
library(thePackage)
library(tidytext)
get_sentiments("bing")
get_sentiments("afinn")
data("stop_words")
library(dplyr)
# get data
setup_twitteR()
tweet_gettr("@undertaleright")
dataset <- tweet_gettr("@undertaleright")
View(dataset)
library(roxygen2)
document()
getwd()
install("../package")
library(thePackage)
library(tidytext)
library(dplyr)
dataset <- tweet_gettr("@undertaleright")
install("../package")
library(thePackage)
library(tidytext)
library(dplyr)
dataset <- tweet_gettr("@undertaleright")
View(dataset)
View(dataset)
View(dataset$tokens)
install("../package")
library(thePackage)
dataset <- tweet_gettr("@undertaleright")
install("../package")
library(thePackage)
dataset <- tweet_gettr("@undertaleright")
install("../package")
library(thePackage)
dataset <- tweet_gettr("@undertaleright")
View(dataset)
View(dataset)
thePackage::make_sentence(dataset)
install("../package")
library(thePackage)
thePackage::make_sentence(dataset)
install("../package")
library(thePackage)
thePackage::make_sentence(dataset)
library(dplyr)
add_sentiments <- function(input) {
input <- inner_join(input$lowercase_tokens, get_sentiments("bing"))
return(input)
}
dataset$tokens <- add_sentiments(dataset$tokens)
add_sentiments <- function(input) {
input <- inner_join(input, get_sentiments("bing"))
return(input)
}
dataset$tokens <- add_sentiments(dataset$tokens)
get_sentiments("bing")
add_sentiments <- function(input) {
input <- inner_join(input, get_sentiments("bing"), by = c(lowercase_tokens, ))
return(input)
}
dataset$tokens <- add_sentiments(dataset$tokens)
input <- inner_join(input, get_sentiments("bing"), by = c(lowercase_tokens, sentiment))
add_sentiments <- function(input) {
input <- inner_join(input, get_sentiments("bing"), by = c(lowercase_tokens, sentiment))
return(input)
}
dataset$tokens <- add_sentiments(dataset$tokens)
input <- inner_join(input, get_sentiments("bing"), by = c(lowercase_tokens, sentiment))
add_sentiments <- function(input) {
input <- inner_join(input, get_sentiments("bing"), by = c(lowercase_tokens, sentiment))
return(input)
}
dataset$tokens <- add_sentiments(dataset$tokens)
add_sentiments <- function(input) {
print(colnames(input))
input <- inner_join(input, get_sentiments("bing"), by = c(lowercase_tokens, sentiment))
return(input)
}
dataset$tokens <- add_sentiments(dataset$tokens)
add_sentiments <- function(input) {
print(colnames(input))
input <- inner_join(input, get_sentiments("bing"), by = c("lowercase_tokens", "sentiment"))
return(input)
}
dataset$tokens <- add_sentiments(dataset$tokens)
add_sentiments <- function(input) {
print(colnames(input))
input <- inner_join(input, get_sentiments("bing"), by = c("lowercase_tokens" = "sentiment"))
return(input)
}
dataset$tokens <- add_sentiments(dataset$tokens)
View(dataset$tokens)
dataset <- tweet_gettr("@undertaleright")
add_sentiments <- function(input) {
print(colnames(input))
input <- inner_join(input, get_sentiments("bing"), by = c("lowercase_tokens" = "sentiment"), keep=T)
return(input)
}
tester <- add_sentiments(dataset$tokens)
View(tester)
input <- left_join(input, get_sentiments("bing"), by = c("lowercase_tokens" = "sentiment"), keep=T)
add_sentiments <- function(input) {
print(colnames(input))
input <- left_join(input, get_sentiments("bing"), by = c("lowercase_tokens" = "sentiment"), keep=T)
return(input)
}
tester <- add_sentiments(dataset$tokens)
View(tester)
View(tester)
add_sentiments <- function(input) {
print(colnames(input))
input <- left_join(input, get_sentiments("bing"), by = c("lowercase_tokens" = "word"), keep=T)
return(input)
}
tester <- add_sentiments(dataset$tokens)
View(dataset$tokens)
View(get_sentiments("bing"))
use_package("dplyr")
use_package("tidytext")
document()
install.packages("../package")
install("../package")
install("../package")
dataset <- tweet_gettr("@undertaleright")
install("../package")
dataset <- thePackage::tweet_gettr("@undertaleright")
View(dataset$tokens)
install.packages("../package")
install("../package")
dataset <- thePackage::tweet_gettr("@undertaleright")
install("../package")
dataset <- thePackage::tweet_gettr("@undertaleright")
View(dataset$tokens)
install("../package")
install("../package")
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
dataset <- thePackage::tweet_gettr("@wint")
# get data
setup_twitteR()
dataset <- thePackage::tweet_gettr("@wint")
dataset <- thePackage::tweet_gettr("@dril")
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset, "crowded")
thePackage::make_sentence(dataset, "around")
description()
document()
install("../package")
thePackage::make_sentence(dataset, "around")
thePackage::make_sentence(dataset, "around")
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset)
thePackage::make_sentence(dataset, sentiment = "positive")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
thePackage::make_sentence(dataset, sentiment = "positive")
FUCK <- c(NULL, NULL, NULL, "egg", NULL)
print(FUCK)
FUCK <- c(NULL, "egg",NULL, NULL, "egg", NULL)
print(FUCK)
print(dataset$tokens$sentiment)
print(dataset$tokens$sentiment == NULL)
print(dataset$tokens$sentiment == "negative")
print(is.na(dataset$tokens$sentiment))
install("../package")
dataset <- thePackage::tweet_gettr("@dril")
print(is.na(dataset$tokens$sentiment))
print(dataset$tokens[is.na(dataset$tokens$sentiment),])
dataset$tokens[is.na(dataset$tokens$sentiment),] <- "asdf"
print(dataset$tokens)
install("../package")
dataset <- thePackage::tweet_gettr("@dril")
dataset$tokens[is.na(dataset$tokens$sentiment),"sentiment"] <- "asdf"
print(dataset$tokens)
install("../package")
dataset <- thePackage::tweet_gettr("@dril")
install("../package")
dataset <- thePackage::tweet_gettr("@dril")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
thePackage::make_sentence(dataset, sentiment = "positive")
document()
dataset <- thePackage::tweet_gettr("@undertaleright")
thePackage::make_sentence(dataset, sentiment = "positive")
install("../package")
thePackage::make_sentence(dataset, sentiment = "positive")
thePackage::make_sentence(dataset, sentiment = "positive")
thePackage::make_sentence(dataset, sentiment = "positive")
thePackage::make_sentence(dataset, sentiment = "positive")
thePackage::make_sentence(dataset, sentiment = "negative")
thePackage::make_sentence(dataset, sentiment = "negative")
thePackage::make_sentence(dataset, sentiment = "negative")
thePackage::make_sentence(dataset, sentiment = "negative")
thePackage::make_sentence(dataset, sentiment = "negative")
thePackage::make_sentence(dataset, sentiment = "negative")
thePackage::make_sentence(dataset, sentiment = "negative")
thePackage::make_sentence(dataset, sentiment = "negative")
thePackage::make_sentence(dataset, sentiment = "negative")
thePackage::make_sentence(dataset, sentiment = "negative")
FUCK <- c("egg", "egg")
print(FUCK)
rep(FUCK, 2)
install("../package")
thePackage::make_sentence(dataset, sentiment = "negative", lazy_sentiment = F, amp = 10)
install("../package")
thePackage::make_sentence(dataset, sentiment = "negative", lazy_sentiment = F, amp = 10)
thePackage::make_sentence(dataset, sentiment = "negative", lazy_sentiment = F, amp = 10)
install("../package")
thePackage::make_sentence(dataset, sentiment = "negative", lazy_sentiment = F, amp = 10)
thePackage::make_sentence(dataset, sentiment = "negative", lazy_sentiment = F, amp = 10)
install("../package")
thePackage::make_sentence(dataset, sentiment = "negative", lazy_sentiment = F, amp = 10)
thePackage::make_sentence(dataset, sentiment = "negative", lazy_sentiment = F, amp = 10)
